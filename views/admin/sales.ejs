
<!DOCTYPE html>
<html lang="en">
  <%- include('partials/_head.ejs') %>

<body class="g-sidenav-show  bg-gray-200">
  <%- include('partials/_navbar.ejs') %>
  <%- include('partials/_asidebar.ejs') %>
  
  <main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg ">
     <div class="container-fluid py-4">
      <div class="row">
        <div class="col-12">
          <div class="card my-4">
            <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
              <div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3" style="display:flex; justify-content: space-between;">
                <div>
                  <h6 class="text-white text-capitalize ps-3">Sales Report</h6>
                </div>
                <div style="margin-right: 2rem">
                  <button class="btn btn-outline-white btn-sm mb-0 me-3" id="generateSalesReportButton"><i class="fa fa-clipboard" style="font-size:1rem;vertical-align: middle;"></i>  Generate Sales Report</button>
                </div>
              </div>
            </div>
            <div class="card-body px-0 pb-2">
              <div class="table-responsive p-0">
                <table class="table align-items-center mb-0">
                  <thead>
                    <tr>
                      <th class="text-uppercase text-center text-secondary text-xxs font-weight-bolder opacity-7 ps-2">OrderId</th>
                      <th class="text-uppercase text-center text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Products</th>
                      <th class="text-uppercase text-center text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Total</th>
                      <th class="text-uppercase text-center text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Payable</th>
                      <th class="text-uppercase text-center text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Status</th>
                      <th class="text-uppercase text-center text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Order Date</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% locals.orders.forEach(order => { %>
                      <tr>
                        <td class="text-center"><%= order._id.toString().slice(0, 6) %></td>
                        <td>
                          <!-- <details> -->
                            <!-- <summary>View Products</summary> -->
                            <table class="table sub-table">
                              <thead>
                                <tr>
                                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">ProductID</th>
                                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Name</th>
                                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Qty</th>
                                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Price</th>
                                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Subtotal</th>
                                </tr>
                              </thead>
                              <tbody>
                                <% order.items.forEach(product => { %>
                                  <tr>
                                    <td><%= product.productId.toString().slice(0, 6) %></td>
                                    <td><%= product.productName %></td>
                                    <td><%= product.quantity %></td>
                                    <td><%= product.price %></td>
                                    <td><%= product.price * product.quantity %></td>
                                  </tr>
                                <% }) %>
                              </tbody>
                            </table>
                          <!-- </details> -->
                        </td>
                        <td class="text-center"><%= order.total %></td>
                        <td class="text-center"><%= order.amountPayable %></td>
                        <td class="text-center"><%= order.status %></td>
                        <td class="text-center"><%= new Date(order.createdAt).toLocaleDateString('en-GB') %></td>
                      </tr>
                    <% }) %>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
        
      </div>
      <%- include('partials/_footer.ejs') %>
    </div>
  </main>
  <!--   Core JS Files   -->

    
  <script src="/assets/js/core/popper.min.js"></script>
  <script src="/assets/js/core/bootstrap.min.js"></script>
  <script src="/assets/js/plugins/perfect-scrollbar.min.js"></script>
  <script src="/assets/js/plugins/smooth-scrollbar.min.js"></script>
  <script>
        
        const generateSalesReportButton = document.getElementById('generateSalesReportButton');

generateSalesReportButton.addEventListener('click', async () => {
      const { value: formValues } = await Swal.fire({
        title: "Enter Dates For sales Report",
        html: `
          <input required type="date" id="startingDate" name="startingDate" style="display:inline;" class="swal2-input">
          <input required type="date" id="endingDate" name="endingDate" style="display:inline;" class="swal2-input">
        `,
        focusConfirm: false,
        preConfirm: () => {
          return [
            document.getElementById("startingDate").value,
            document.getElementById("endingDate").value
          ];
      }
    });

    if (formValues[0] && formValues[1]) {
      downloadSalesReport('pdf', formValues[0], formValues[1]);
    } else {
      Swal.fire("Give proper dates!");
    }
});

function downloadSalesReport(format, startingDate, endingDate) {

  // Adjust the fetch URL to include the desired format
  const fetchUrl = `/admin/reports/${format}`;

  fetch(fetchUrl, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ startingDate, endingDate }),
  })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.blob(); // Use blob() to get the response as a Blob
    })
    .then(blob => {
      // Create a blob URL and open it in a new tab
      const url = URL.createObjectURL(blob);
      window.open(url, '_blank');
    })
    .catch(error => {
      console.error('Fetch error of sales report:', error);
      // Handle errors if necessary
      Swal.fire('NO ORDERS!', 'There is no orders in that date', 'error');
    });
  }

    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
      var options = {
        damping: '0.5'
      }
      Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
  </script>
  <!-- Github buttons -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>
  <!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
  <script src="/assets/js/material-dashboard.min.js?v=3.1.0"></script>
  <%- include('partials/_scripts.ejs') %>
</body>

</html>